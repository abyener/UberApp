{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"onFocus\", \"onBlur\", \"onChangeText\", \"clearButtonMode\", \"InputComp\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, { forwardRef, useMemo, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row'\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  },\n  description: {},\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc'\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5\n  },\n  powered: {}\n};\nexport var GooglePlacesAutocomplete = forwardRef(function (props, ref) {\n  var _results = [];\n  var _requests = [];\n  var hasNavigator = function hasNavigator() {\n    var _navigator;\n    if ((_navigator = navigator) != null && _navigator.geolocation) {\n      return true;\n    } else {\n      console.warn('If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR');\n      return false;\n    }\n  };\n  var buildRowsFromResults = function buildRowsFromResults(results) {\n    var res = [];\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = _toConsumableArray(props.predefinedPlaces.filter(function (place) {\n        return place == null ? void 0 : place.description.length;\n      }));\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true\n        });\n      }\n    }\n    res = res.map(function (place) {\n      return _objectSpread(_objectSpread({}, place), {}, {\n        isPredefinedPlace: true\n      });\n    });\n    return [].concat(_toConsumableArray(res), _toConsumableArray(results));\n  };\n  var getRequestUrl = function getRequestUrl(requestUrl) {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api'\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n  var getRequestHeaders = function getRequestHeaders(requestUrl) {\n    return (requestUrl == null ? void 0 : requestUrl.headers) || {};\n  };\n  var setRequestHeaders = function setRequestHeaders(request, headers) {\n    Object.keys(headers).map(function (headerKey) {\n      return request.setRequestHeader(headerKey, headers[headerKey]);\n    });\n  };\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateText = _useState2[0],\n    setStateText = _useState2[1];\n  var _useState3 = useState(buildRowsFromResults([])),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dataSource = _useState4[0],\n    setDataSource = _useState4[1];\n  var _useState5 = useState(props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listViewDisplayed = _useState6[0],\n    setListViewDisplayed = _useState6[1];\n  var _useState7 = useState(getRequestUrl(props.requestUrl)),\n    _useState8 = _slicedToArray(_useState7, 1),\n    url = _useState8[0];\n  var inputRef = useRef();\n  useEffect(function () {\n    _handleChangeText(stateText);\n    return function () {\n      _abortRequests();\n    };\n  }, []);\n  useEffect(function () {\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n  useImperativeHandle(ref, function () {\n    return {\n      setAddressText: function setAddressText(address) {\n        setStateText(address);\n      },\n      getAddressText: function getAddressText() {\n        return stateText;\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      getCurrentLocation: getCurrentLocation\n    };\n  });\n  var requestShouldUseWithCredentials = function requestShouldUseWithCredentials() {\n    return url === 'https://maps.googleapis.com/maps/api';\n  };\n  var _abortRequests = function _abortRequests() {\n    _requests.map(function (i) {\n      return i.abort();\n    });\n    _requests = [];\n  };\n  var supportedPlatform = function supportedPlatform() {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn('This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.');\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var getCurrentLocation = function getCurrentLocation() {\n    var options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000\n    };\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000\n      };\n    }\n    var getCurrentPosition = navigator.geolocation.getCurrentPosition || navigator.geolocation.default.getCurrentPosition;\n    getCurrentPosition && getCurrentPosition(function (position) {\n      if (props.nearbyPlacesAPI === 'None') {\n        var currentLocation = {\n          description: props.currentLocationLabel,\n          geometry: {\n            location: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }\n        };\n        _disableRowLoaders();\n        props.onPress(currentLocation, currentLocation);\n      } else {\n        _requestNearby(position.coords.latitude, position.coords.longitude);\n      }\n    }, function (error) {\n      _disableRowLoaders();\n      console.error(error.message);\n    }, options);\n  };\n  var _onPress = function _onPress(rowData) {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        return;\n      }\n      Keyboard.dismiss();\n      _abortRequests();\n      _enableRowLoader(rowData);\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) return;\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          if (responseJSON.status === 'OK') {\n            var details = responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n            setStateText(_renderDescription(rowData));\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n          } else {\n            _disableRowLoaders();\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n            if (!props.onNotFound) {\n              console.warn('google places autocomplete: ' + responseJSON.status);\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n          if (!props.onFail) {\n            console.warn('google places autocomplete: request could not be completed or has been aborted');\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n      request.open('GET', url + \"/place/details/json?\" + Qs.stringify(_objectSpread({\n        key: props.query.key,\n        placeid: rowData.place_id,\n        language: props.query.language\n      }, props.GooglePlacesDetailsQuery)));\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      _enableRowLoader(rowData);\n      setStateText(_renderDescription(rowData));\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n      _onBlur();\n      delete rowData.isLoading;\n      var predefinedPlace = _getPredefinedPlace(rowData);\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n  var _enableRowLoader = function _enableRowLoader(rowData) {\n    var rows = buildRowsFromResults(_results);\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n  var _disableRowLoaders = function _disableRowLoaders() {\n    for (var i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n    setDataSource(buildRowsFromResults(_results));\n  };\n  var _getPredefinedPlace = function _getPredefinedPlace(rowData) {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n    for (var i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n    return rowData;\n  };\n  var _filterResultsByTypes = function _filterResultsByTypes(unfilteredResults, types) {\n    if (types.length === 0) return unfilteredResults;\n    var results = [];\n    for (var i = 0; i < unfilteredResults.length; i++) {\n      var found = false;\n      for (var j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n  var _requestNearby = function _requestNearby(latitude, longitude) {\n    _abortRequests();\n    if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          _disableRowLoaders();\n          if (typeof responseJSON.results !== 'undefined') {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(responseJSON.results, props.filterReverseGeocodingByTypes);\n            } else {\n              results = responseJSON.results;\n            }\n            setDataSource(buildRowsFromResults(results));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n      var requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        requestUrl = url + \"/geocode/json?\" + Qs.stringify(_objectSpread({\n          latlng: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GoogleReverseGeocodingQuery));\n      } else {\n        requestUrl = url + \"/place/nearbysearch/json?\" + Qs.stringify(_objectSpread({\n          location: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GooglePlacesSearchQuery));\n      }\n      request.open('GET', requestUrl);\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n  var _request = function _request(text) {\n    _abortRequests();\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            var results = props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _filterResultsByTypes(responseJSON.predictions, props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n      request.open('GET', url + \"/place/autocomplete/json?input=\" + encodeURIComponent(text) + '&' + Qs.stringify(props.query));\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n  var debounceData = useMemo(function () {\n    return debounce(_request, props.debounce);\n  }, [props.query]);\n  var _onChangeText = function _onChangeText(text) {\n    setStateText(text);\n    debounceData(text);\n  };\n  var _handleChangeText = function _handleChangeText(text) {\n    var _props$textInputProps;\n    _onChangeText(text);\n    var onChangeText = props == null ? void 0 : (_props$textInputProps = props.textInputProps) == null ? void 0 : _props$textInputProps.onChangeText;\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n  var _getRowLoader = function _getRowLoader() {\n    return _jsx(ActivityIndicator, {\n      animating: true,\n      size: \"small\"\n    });\n  };\n  var _renderRowData = function _renderRowData(rowData, index) {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n    return _jsx(Text, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.description, props.styles.description, rowData.isPredefinedPlace ? props.styles.predefinedPlacesDescription : {}],\n      numberOfLines: props.numberOfLines,\n      children: _renderDescription(rowData)\n    });\n  };\n  var _renderDescription = function _renderDescription(rowData) {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n  var _renderLoader = function _renderLoader(rowData) {\n    if (rowData.isLoading === true) {\n      return _jsx(View, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.loader, props.styles.loader],\n        children: _getRowLoader()\n      });\n    }\n    return null;\n  };\n  var _renderRow = function _renderRow() {\n    var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return _jsx(ScrollView, {\n      contentContainerStyle: props.isRowScrollable ? {\n        minWidth: '100%'\n      } : {\n        width: '100%'\n      },\n      scrollEnabled: props.isRowScrollable,\n      keyboardShouldPersistTaps: props.keyboardShouldPersistTaps,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      children: _jsx(TouchableHighlight, {\n        style: props.isRowScrollable ? {\n          minWidth: '100%'\n        } : {\n          width: '100%'\n        },\n        onPress: function onPress() {\n          return _onPress(rowData);\n        },\n        underlayColor: props.listUnderlayColor || '#c8c7cc',\n        children: _jsxs(View, {\n          style: [props.suppressDefaultStyles ? {} : defaultStyles.row, props.styles.row, rowData.isPredefinedPlace ? props.styles.specialItemRow : {}],\n          children: [_renderLoader(rowData), _renderRowData(rowData, index)]\n        })\n      })\n    });\n  };\n  var _renderSeparator = function _renderSeparator(sectionID, rowID) {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.separator, props.styles.separator]\n    }, sectionID + \"-\" + rowID);\n  };\n  var isNewFocusInAutocompleteResultList = function isNewFocusInAutocompleteResultList(_ref) {\n    var relatedTarget = _ref.relatedTarget,\n      currentTarget = _ref.currentTarget;\n    if (!relatedTarget) return false;\n    var node = relatedTarget.parentNode;\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n    return false;\n  };\n  var _onBlur = function _onBlur(e) {\n    var _inputRef$current;\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef == null ? void 0 : (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.blur();\n  };\n  var _onFocus = function _onFocus() {\n    return setListViewDisplayed(true);\n  };\n  var _renderPoweredLogo = function _renderPoweredLogo() {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, props.styles.poweredContainer],\n      children: _jsx(Image, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.powered, props.styles.powered],\n        resizeMode: \"contain\",\n        source: require(\"./images/powered_by_google_on_white.png\")\n      })\n    });\n  };\n  var _shouldShowPoweredLogo = function _shouldShowPoweredLogo() {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n    for (var i = 0; i < dataSource.length; i++) {\n      var row = dataSource[i];\n      if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var _renderLeftButton = function _renderLeftButton() {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n  var _renderRightButton = function _renderRightButton() {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n  var _getFlatList = function _getFlatList() {\n    var keyGenerator = function keyGenerator() {\n      return Math.random().toString(36).substr(2, 10);\n    };\n    if (supportedPlatform() && (stateText !== '' || props.predefinedPlaces.length > 0 || props.currentLocation === true) && listViewDisplayed === true) {\n      return _jsx(FlatList, _objectSpread({\n        nativeID: \"result-list-id\",\n        scrollEnabled: !props.disableScroll,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.listView, props.styles.listView],\n        data: dataSource,\n        keyExtractor: keyGenerator,\n        extraData: [dataSource, props],\n        ItemSeparatorComponent: _renderSeparator,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return _renderRow(item, index);\n        },\n        ListEmptyComponent: stateText.length > props.minLength && props.listEmptyComponent,\n        ListHeaderComponent: props.renderHeaderComponent && props.renderHeaderComponent(stateText),\n        ListFooterComponent: _renderPoweredLogo\n      }, props));\n    }\n    return null;\n  };\n  var _props$textInputProps2 = props.textInputProps,\n    onFocus = _props$textInputProps2.onFocus,\n    onBlur = _props$textInputProps2.onBlur,\n    onChangeText = _props$textInputProps2.onChangeText,\n    clearButtonMode = _props$textInputProps2.clearButtonMode,\n    InputComp = _props$textInputProps2.InputComp,\n    userProps = _objectWithoutProperties(_props$textInputProps2, _excluded);\n  var TextInputComp = InputComp || TextInput;\n  return _jsxs(View, {\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.container, props.styles.container],\n    pointerEvents: \"box-none\",\n    children: [!props.textInputHide && _jsxs(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, props.styles.textInputContainer],\n      children: [_renderLeftButton(), _jsx(TextInputComp, _objectSpread({\n        ref: inputRef,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.textInput, props.styles.textInput],\n        value: stateText,\n        placeholder: props.placeholder,\n        onFocus: onFocus ? function (e) {\n          _onFocus();\n          onFocus(e);\n        } : _onFocus,\n        onBlur: onBlur ? function (e) {\n          _onBlur(e);\n          onBlur(e);\n        } : _onBlur,\n        clearButtonMode: clearButtonMode || 'while-editing',\n        onChangeText: _handleChangeText\n      }, userProps)), _renderRightButton()]\n    }), props.inbetweenCompo, _getFlatList(), props.children]\n  });\n});\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  listViewDisplayed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string)\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number\n};\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: function onFail() {},\n  onNotFound: function onNotFound() {},\n  onPress: function onPress() {},\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000\n};\nexport default {\n  GooglePlacesAutocomplete: GooglePlacesAutocomplete\n};","map":{"version":3,"names":["debounce","PropTypes","Qs","React","forwardRef","useMemo","useEffect","useImperativeHandle","useRef","useState","defaultStyles","container","flex","textInputContainer","flexDirection","textInput","backgroundColor","height","borderRadius","paddingVertical","paddingHorizontal","fontSize","marginBottom","listView","row","padding","minHeight","loader","justifyContent","description","separator","StyleSheet","hairlineWidth","poweredContainer","alignItems","borderBottomRightRadius","borderBottomLeftRadius","borderColor","borderTopWidth","powered","GooglePlacesAutocomplete","props","ref","_results","_requests","hasNavigator","navigator","geolocation","console","warn","buildRowsFromResults","results","res","length","predefinedPlacesAlwaysVisible","predefinedPlaces","filter","place","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","isPredefinedPlace","getRequestUrl","requestUrl","useOnPlatform","url","Platform","select","web","default","getRequestHeaders","headers","setRequestHeaders","request","Object","keys","headerKey","setRequestHeader","stateText","setStateText","dataSource","setDataSource","listViewDisplayed","setListViewDisplayed","inputRef","_handleChangeText","_abortRequests","setAddressText","address","getAddressText","blur","current","focus","isFocused","clear","getCurrentLocation","requestShouldUseWithCredentials","i","abort","supportedPlatform","OS","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","message","_onPress","rowData","fetchDetails","isLoading","Keyboard","dismiss","_enableRowLoader","XMLHttpRequest","push","ontimeout","onTimeout","onreadystatechange","readyState","status","responseJSON","JSON","parse","responseText","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","onFail","open","stringify","key","query","placeid","place_id","language","GooglePlacesDetailsQuery","withCredentials","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","undefined","filterReverseGeocodingByTypes","error_message","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","text","minLength","predictions","preProcess","encodeURIComponent","debounceData","_onChangeText","onChangeText","textInputProps","_getRowLoader","_renderRowData","index","renderRow","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","renderDescription","formatted_address","name","_renderLoader","_renderRow","isRowScrollable","minWidth","width","keyboardShouldPersistTaps","listUnderlayColor","specialItemRow","_renderSeparator","sectionID","rowID","isNewFocusInAutocompleteResultList","relatedTarget","currentTarget","node","parentNode","id","e","keepResultsAfterBlur","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","disableScroll","item","listEmptyComponent","renderHeaderComponent","onFocus","onBlur","clearButtonMode","InputComp","userProps","TextInputComp","TextInput","textInputHide","placeholder","inbetweenCompo","children","propTypes","bool","string","number","array","object","oneOf","func","oneOfType","shape","objectOf","defaultProps","rankby","type"],"sources":["/Users/abdulbasidyener/Desktop/AppChallengs/UberApp/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  Keyboard,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5,\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row',\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n  description: {},\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc',\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5,\n  },\n  powered: {},\n};\n\nexport const GooglePlacesAutocomplete = forwardRef((props, ref) => {\n  let _results = [];\n  let _requests = [];\n\n  const hasNavigator = () => {\n    if (navigator?.geolocation) {\n      return true;\n    } else {\n      console.warn(\n        'If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR',\n      );\n      return false;\n    }\n  };\n\n  const buildRowsFromResults = (results) => {\n    let res = [];\n\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = [\n        ...props.predefinedPlaces.filter((place) => place?.description.length),\n      ];\n\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true,\n        });\n      }\n    }\n\n    res = res.map((place) => ({\n      ...place,\n      isPredefinedPlace: true,\n    }));\n\n    return [...res, ...results];\n  };\n\n  const getRequestUrl = (requestUrl) => {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api',\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  const getRequestHeaders = (requestUrl) => {\n    return requestUrl?.headers || {};\n  };\n\n  const setRequestHeaders = (request, headers) => {\n    Object.keys(headers).map((headerKey) =>\n      request.setRequestHeader(headerKey, headers[headerKey]),\n    );\n  };\n\n  const [stateText, setStateText] = useState('');\n  const [dataSource, setDataSource] = useState(buildRowsFromResults([]));\n  const [listViewDisplayed, setListViewDisplayed] = useState(\n    props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed,\n  );\n  const [url] = useState(getRequestUrl(props.requestUrl));\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    // This will load the default value's search results after the view has\n    // been rendered\n    _handleChangeText(stateText);\n    return () => {\n      _abortRequests();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // Update dataSource if props.predefinedPlaces changed\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n\n  useImperativeHandle(ref, () => ({\n    setAddressText: (address) => {\n      setStateText(address);\n    },\n    getAddressText: () => stateText,\n    blur: () => inputRef.current.blur(),\n    focus: () => inputRef.current.focus(),\n    isFocused: () => inputRef.current.isFocused(),\n    clear: () => inputRef.current.clear(),\n    getCurrentLocation,\n  }));\n\n  const requestShouldUseWithCredentials = () =>\n    url === 'https://maps.googleapis.com/maps/api';\n\n  const _abortRequests = () => {\n    _requests.map((i) => i.abort());\n    _requests = [];\n  };\n\n  const supportedPlatform = () => {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn(\n        'This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.',\n      );\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000,\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000,\n      };\n    }\n    const getCurrentPosition =\n      navigator.geolocation.getCurrentPosition ||\n      navigator.geolocation.default.getCurrentPosition;\n\n    getCurrentPosition &&\n      getCurrentPosition(\n        (position) => {\n          if (props.nearbyPlacesAPI === 'None') {\n            let currentLocation = {\n              description: props.currentLocationLabel,\n              geometry: {\n                location: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude,\n                },\n              },\n            };\n\n            _disableRowLoaders();\n            props.onPress(currentLocation, currentLocation);\n          } else {\n            _requestNearby(position.coords.latitude, position.coords.longitude);\n          }\n        },\n        (error) => {\n          _disableRowLoaders();\n          console.error(error.message);\n        },\n        options,\n      );\n  };\n\n  const _onPress = (rowData) => {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      // display loader\n      _enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            // if (_isMounted === true) {\n            const details = responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n            // }\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn(\n                'google places autocomplete: ' + responseJSON.status,\n              );\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted',\n            );\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open(\n        'GET',\n        `${url}/place/details/json?` +\n          Qs.stringify({\n            key: props.query.key,\n            placeid: rowData.place_id,\n            language: props.query.language,\n            ...props.GooglePlacesDetailsQuery,\n          }),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = _getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  const _enableRowLoader = (rowData) => {\n    let rows = buildRowsFromResults(_results);\n    for (let i = 0; i < rows.length; i++) {\n      if (\n        rows[i].place_id === rowData.place_id ||\n        (rows[i].isCurrentLocation === true &&\n          rowData.isCurrentLocation === true)\n      ) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  const _disableRowLoaders = () => {\n    // if (_isMounted === true) {\n    for (let i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n    // }\n  };\n\n  const _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  const _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n\n  const _requestNearby = (latitude, longitude) => {\n    _abortRequests();\n\n    if (\n      latitude !== undefined &&\n      longitude !== undefined &&\n      latitude !== null &&\n      longitude !== null\n    ) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            // if (_isMounted === true) {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(\n                responseJSON.results,\n                props.filterReverseGeocodingByTypes,\n              );\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        requestUrl =\n          `${url}/geocode/json?` +\n          Qs.stringify({\n            latlng: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GoogleReverseGeocodingQuery,\n          });\n      } else {\n        requestUrl =\n          `${url}/place/nearbysearch/json?` +\n          Qs.stringify({\n            location: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GooglePlacesSearchQuery,\n          });\n      }\n\n      request.open('GET', requestUrl);\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  const _request = (text) => {\n    _abortRequests();\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            // if (_isMounted === true) {\n            const results =\n              props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                ? _filterResultsByTypes(\n                    responseJSON.predictions,\n                    props.filterReverseGeocodingByTypes,\n                  )\n                : responseJSON.predictions;\n\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      request.open(\n        'GET',\n        `${url}/place/autocomplete/json?input=` +\n          encodeURIComponent(text) +\n          '&' +\n          Qs.stringify(props.query),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceData = useMemo(() => debounce(_request, props.debounce), [\n    props.query,\n  ]);\n\n  const _onChangeText = (text) => {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  const _handleChangeText = (text) => {\n    _onChangeText(text);\n\n    const onChangeText = props?.textInputProps?.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  const _getRowLoader = () => {\n    return <ActivityIndicator animating={true} size='small' />;\n  };\n\n  const _renderRowData = (rowData, index) => {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return (\n      <Text\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.description,\n          props.styles.description,\n          rowData.isPredefinedPlace\n            ? props.styles.predefinedPlacesDescription\n            : {},\n        ]}\n        numberOfLines={props.numberOfLines}\n      >\n        {_renderDescription(rowData)}\n      </Text>\n    );\n  };\n\n  const _renderDescription = (rowData) => {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  const _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.loader,\n            props.styles.loader,\n          ]}\n        >\n          {_getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const _renderRow = (rowData = {}, index) => {\n    return (\n      <ScrollView\n        contentContainerStyle={\n          props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n        }\n        scrollEnabled={props.isRowScrollable}\n        keyboardShouldPersistTaps={props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <TouchableHighlight\n          style={\n            props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n          }\n          onPress={() => _onPress(rowData)}\n          underlayColor={props.listUnderlayColor || '#c8c7cc'}\n        >\n          <View\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.row,\n              props.styles.row,\n              rowData.isPredefinedPlace ? props.styles.specialItemRow : {},\n            ]}\n          >\n            {_renderLoader(rowData)}\n            {_renderRowData(rowData, index)}\n          </View>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  };\n\n  const _renderSeparator = (sectionID, rowID) => {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return (\n      <View\n        key={`${sectionID}-${rowID}`}\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.separator,\n          props.styles.separator,\n        ]}\n      />\n    );\n  };\n\n  const isNewFocusInAutocompleteResultList = ({\n    relatedTarget,\n    currentTarget,\n  }) => {\n    if (!relatedTarget) return false;\n\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  const _onBlur = (e) => {\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef?.current?.blur();\n  };\n\n  const _onFocus = () => setListViewDisplayed(true);\n\n  const _renderPoweredLogo = () => {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return (\n      <View\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.row,\n          defaultStyles.poweredContainer,\n          props.styles.poweredContainer,\n        ]}\n      >\n        <Image\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.powered,\n            props.styles.powered,\n          ]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  };\n\n  const _shouldShowPoweredLogo = () => {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let row = dataSource[i];\n\n      if (\n        !row.hasOwnProperty('isCurrentLocation') &&\n        !row.hasOwnProperty('isPredefinedPlace')\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const _renderLeftButton = () => {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  const _renderRightButton = () => {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  const _getFlatList = () => {\n    const keyGenerator = () => Math.random().toString(36).substr(2, 10);\n\n    if (\n      supportedPlatform() &&\n      (stateText !== '' ||\n        props.predefinedPlaces.length > 0 ||\n        props.currentLocation === true) &&\n      listViewDisplayed === true\n    ) {\n      return (\n        <FlatList\n          nativeID='result-list-id'\n          scrollEnabled={!props.disableScroll}\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.listView,\n            props.styles.listView,\n          ]}\n          data={dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[dataSource, props]}\n          ItemSeparatorComponent={_renderSeparator}\n          renderItem={({ item, index }) => _renderRow(item, index)}\n          ListEmptyComponent={\n            stateText.length > props.minLength && props.listEmptyComponent\n          }\n          ListHeaderComponent={\n            props.renderHeaderComponent &&\n            props.renderHeaderComponent(stateText)\n          }\n          ListFooterComponent={_renderPoweredLogo}\n          {...props}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  let {\n    onFocus,\n    onBlur,\n    onChangeText, // destructuring here stops this being set after onChangeText={_handleChangeText}\n    clearButtonMode,\n    InputComp,\n    ...userProps\n  } = props.textInputProps;\n  const TextInputComp = InputComp || TextInput;\n  return (\n    <View\n      style={[\n        props.suppressDefaultStyles ? {} : defaultStyles.container,\n        props.styles.container,\n      ]}\n      pointerEvents='box-none'\n    >\n      {!props.textInputHide && (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer,\n            props.styles.textInputContainer,\n          ]}\n        >\n          {_renderLeftButton()}\n          <TextInputComp\n            ref={inputRef}\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.textInput,\n              props.styles.textInput,\n            ]}\n            value={stateText}\n            placeholder={props.placeholder}\n            onFocus={\n              onFocus\n                ? (e) => {\n                    _onFocus();\n                    onFocus(e);\n                  }\n                : _onFocus\n            }\n            onBlur={\n              onBlur\n                ? (e) => {\n                    _onBlur(e);\n                    onBlur(e);\n                  }\n                : _onBlur\n            }\n            clearButtonMode={clearButtonMode || 'while-editing'}\n            onChangeText={_handleChangeText}\n            {...userProps}\n          />\n          {_renderRightButton()}\n        </View>\n      )}\n      {props.inbetweenCompo}\n      {_getFlatList()}\n      {props.children}\n    </View>\n  );\n});\n\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  // Must write it this way: https://stackoverflow.com/a/54290946/7180620\n  listViewDisplayed: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['auto']),\n  ]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string),\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n};\n\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant',\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: () => {},\n  onNotFound: () => {},\n  onPress: () => {},\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n};\n\nexport default { GooglePlacesAutocomplete };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}